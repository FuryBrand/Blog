<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>For Love To Love</title>
    <description>Write down &amp; share my person notes. 记录和分享我的个人笔记</description>
    <link>http://furybrand.gitee.io//</link>
    <atom:link href="http://furybrand.gitee.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 09 Jun 2021 15:05:17 +0000</pubDate>
    <lastBuildDate>Wed, 09 Jun 2021 15:05:17 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>用JMeter替换Postman</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;由于安全等原因，需要弃用Postman迁移至JMeter。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;下载及安装&quot;&gt;下载及安装&lt;/h2&gt;

&lt;p&gt;macOS的话，安装及配置参考&lt;a href=&quot;/2020/10/24/software-4-work-MAC/&quot;&gt;记从Windows办公迁移至MAC办公&lt;/a&gt;，Windows的话，直接官网下载就好了。&lt;/p&gt;

&lt;h2 id=&quot;简单入门&quot;&gt;简单入门&lt;/h2&gt;

&lt;h4 id=&quot;新增一个thread-group&quot;&gt;新增一个Thread Group&lt;/h4&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Test Plan&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Threads(Users)&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;因为是代替Postman，所以目前保持如下设置即可，不用调整线程数等参数&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/01.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;新增一个http-request并尝试请求&quot;&gt;新增一个HTTP Request并尝试请求&lt;/h4&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sampler&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP Request&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;将HTTP接口的相关信息填入其中，如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/02.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Start&lt;/code&gt;或者通过上方的绿色播放按钮来执行。&lt;/p&gt;

&lt;h4 id=&quot;查看结果并保留response报文&quot;&gt;查看结果并保留Response报文&lt;/h4&gt;

&lt;p&gt;通过上面的步骤，可以发送请求，但是请求发送的成功失败，啥情况，咱不知道。所以需要增加两个Listener来看下结果。&lt;/p&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Listener&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View Result Tree&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Listener&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Save Responses to a fail&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;此时再次尝试发送请求便可以通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View Result Tree&lt;/code&gt;来看到响应的结果了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/03.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是由于报文体中的内容并不能进行复制（或者说我暂时没有找到复制的方法），暂时通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Save Responses to a fail&lt;/code&gt;来将响应保存下来。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/04.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;增加http-header-manager&quot;&gt;增加HTTP Header Manager&lt;/h4&gt;

&lt;p&gt;JMeter的话，相对Postman，很多东西需要自己维护好，若后端对于中文不识别，或者请求的报文体的格式没有正确识别的话，可能需要我们手动的维护下Header&lt;/p&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Config Element&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP Header Manager&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/05.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;此时再次请求的话，可以在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;View Result Tree&lt;/code&gt;中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Request&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Request Headers&lt;/code&gt;中增加了刚刚设置好的Header了。&lt;/p&gt;

&lt;p&gt;这里我曾经遇到过一个Bug，当时使用了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add from Clipboard&lt;/code&gt;按钮，页面看起来一起正常，但是请求的时候就在Header中莫名其妙的增加了一个空格，导致后端一直解析出错。后来删除了之后重新手撸了一遍就好了。&lt;/p&gt;

&lt;h4 id=&quot;简单的参数化&quot;&gt;简单的参数化&lt;/h4&gt;

&lt;p&gt;JMeter支持BeanShell的方式进行参数化，详细的使用方式参考官网，我这就是简单实现一个替换。&lt;/p&gt;

&lt;p&gt;右键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Thread Group&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pre Processors&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BeanShell PreProcessor&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/06.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;//这是一个注释，token是xixi拼装了当前的时间戳。
String token = &quot;xixi&quot; + &quot;${__time(,)}&quot;;
String name;
String age;
int flag = 2;
switch (flag) {
    case 1:
        name = &quot;liutianyu&quot;;
        age = &quot;18&quot;;
        break;
    case 2:
        name = &quot;liuwuxin&quot;;
        age = &quot;108&quot;;
}
vars.put(&quot;token&quot;, token);
vars.put(&quot;name&quot;, name);
vars.put(&quot;age&quot;, age);
log.info(&quot;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&quot;);
log.info(&quot;刚刚发送的数据flag为：&quot; + flag);
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP Request&lt;/code&gt;中需要做如下改造。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-17-use-jmeter-2-replace-postman/07.png&quot; alt=&quot;截图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BeanShell PreProcessor&lt;/code&gt;中是可以打印日志的，日志通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JMeter&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Options&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Log Viewer&lt;/code&gt;来激活日志窗口。&lt;/p&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2021年3月17日：初稿。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 17 Mar 2021 20:35:00 +0000</pubDate>
        <link>http://furybrand.gitee.io//2021/03/17/use-jmeter-2-replace-postman/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2021/03/17/use-jmeter-2-replace-postman/</guid>
        
        <category>JMeter</category>
        
        <category>技术相关</category>
        
        
      </item>
    
      <item>
        <title>记一场关于Nginx配置文件及网络问题排查步骤的分享</title>
        <description>&lt;p&gt;有伙伴想听一下在排查网络环境问题上的一些经验。Nginx是一个避不开的话题，正好顺便把Nginx的一些内容一起过一下吧。下面算是该场分享的文本稿。&lt;/p&gt;

&lt;h2 id=&quot;文本稿&quot;&gt;文本稿&lt;/h2&gt;

&lt;h4 id=&quot;开篇&quot;&gt;开篇&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.001.jpeg&quot; alt=&quot;开篇&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大家好，我是XXX。今天和大家聊一聊Nginx的配置文件及排查网络问题步骤。&lt;/p&gt;

&lt;h4 id=&quot;nginx是什么&quot;&gt;Nginx是什么？&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.002.jpeg&quot; alt=&quot;Nginx是什么？&quot; /&gt;&lt;/p&gt;

&lt;p&gt;C/C++&lt;/p&gt;

&lt;p&gt;Nginx是C++写的，所以在性能上肯定会比较强。名字的含义是engine x。原作者是俄罗斯人。&lt;/p&gt;

&lt;p&gt;HTTP server&lt;/p&gt;

&lt;p&gt;Nginx可以作为HTTP server来代理一些静态资源文件。图片、css、js啥的&lt;/p&gt;

&lt;p&gt;Reverse proxy server&lt;/p&gt;

&lt;p&gt;平时的工作中，接触最多的可能就是Nginx作为反向代理服务器的情况了。反向代理服务器是一种代理服务器，通常位于专用网络中的防火墙后面，并将客户端请求定向到适当的后端服务器。 反向代理提供了更高级别的抽象和控制，以确保客户端和服务器之间网络流量的顺畅流动。测试环境的话，一般是两种情况。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;一台服务器中部署了多个Web服务，利用服务器的Nginx，配合客户端机器的host（或者内网的DNS）来做访问上的隔离。如果不这么搞的话，用ip加端口来访问也不是不可以。&lt;/li&gt;
  &lt;li&gt;对于前后端分离式的部署架构，如前端是VUE的静态工程，后端多个Java应用提供HTTP接口的情况。Nginx可以作为HTTP server代理VUE工程，然后将特定的请求定向到后端服务。可以通过这种手段来解决跨域问题。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;TCP/UDP proxy server&lt;/p&gt;

&lt;p&gt;Nginx可以作为TCP/UDP的代理服务器，在之前的文章中，我试图利用Nginx代理MySQL服务。理论上可行，但是最终因为机器的编辑环境的依赖问题没有继续下去。&lt;/p&gt;

&lt;p&gt;Mail proxy server(POP3, IMAP, SMTP)&lt;/p&gt;

&lt;p&gt;既然可以搞定运输层的协议，那么基于TCP/IP的这些邮件协议也都不在话下了。&lt;/p&gt;

&lt;p&gt;Load Balancing&lt;/p&gt;

&lt;p&gt;反向代理的进阶就是负载均衡了。说白了就是活太多了干不过来，那就多来几个人干吧。具体的策略和配置在后面会有具体介绍，这里就不多说了。&lt;/p&gt;

&lt;p&gt;FastCGI/SCGI/uwsgi&lt;/p&gt;

&lt;p&gt;这个也有点意思，稍微说两句。前两个协议是给PHP用的，最后一个是给Python用的。像平时我们用Java应用的使用，Nginx是直接将HTTP转给了后端的Java应用的。但是其实Nginx也可以处理一下，将HTTP转成uwsgi之类的协议和后端通信。能猜到原因是啥吗？对，因为PHP和Python的效率较低，直接处理HTTP的效率不高，所以先由Nginx这个由C++写的程序处理一下，减轻后端服务的压力。再深的东西我也不懂了。&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;Nginx支持的还不止这些，比如ta还可以作为mp4的视频流的代理。但是我没有具体研究了。&lt;/p&gt;

&lt;h4 id=&quot;config-file&quot;&gt;Config File&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.003.jpeg&quot; alt=&quot;Config_File&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Default config file - nginx.conf&lt;/p&gt;

&lt;p&gt;Nginx的默认配置文件是“Nginx.conf“，根据安装路径的不同位置也不一定在哪。&lt;/p&gt;

&lt;p&gt;“include domains/*;”&lt;/p&gt;

&lt;p&gt;注意“Nginx.conf“中的“include domains/*;”的用法，会将指定路径下的内容全部载入到一起作为配置文件生效。最后在程序中应该是一个文件，所以此时是存在优先级的问题的。&lt;/p&gt;

&lt;p&gt;Server Block(listen directive &amp;amp; server_name entries &amp;amp; location)&lt;/p&gt;

&lt;p&gt;当一个请求进来的时候，Nginx会先判断应该是哪个server来处理这个请求。此时listen命令有最高优先级，若匹配到则无需关心server_name。listen决定了这个server块儿监听的是哪个ip和端口。示例中监听的是HTTP请求的默认端口80。当匹配到了多个server，此时会用server_name项来进行匹配。server_name支持通配符的匹配。有自己的优先级规则。server_name之后就是location的匹配了，location支持正则，也有多个优先级，重点说一个。“常规字符串匹配，如果有多个location都能匹配的话，优先匹配表达式最长的location”。匹配到了某一个location之后，会根据proxy_pass进行定向。若配置成了ip+端口，就直接转发走了。若配置成了upstream里配置的参数，则会使用负载均衡策略生效。另外查询log的话，参考access_log和error_log。&lt;/p&gt;

&lt;p&gt;关于server块儿的介绍，具体可以参考&lt;a href=&quot;/2020/09/02/nginx/&quot;&gt;T-记一次Nginx分享&lt;/a&gt;中的2.1，2.2。&lt;/p&gt;

&lt;h4 id=&quot;load-balancing&quot;&gt;Load balancing&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.004.jpeg&quot; alt=&quot;Load_balancing&quot; /&gt;&lt;/p&gt;

&lt;p&gt;提前声明，这部分都总结前人和官网的说明，我没有手动试验过。&lt;/p&gt;

&lt;p&gt;round-robin(default)&lt;/p&gt;

&lt;p&gt;轮询调度，就是一个一个来，标记为down的是手动下线的。标记为backup的是当所有的机器都不可用时才会用到ta。&lt;/p&gt;

&lt;p&gt;least-connected&lt;/p&gt;

&lt;p&gt;最小连接数，因为不是所有的请求，在服务器端的处理时长都相同。如果有些请求堆积了，那就让别人来处理，大原则是保持最小连接数。&lt;/p&gt;

&lt;p&gt;ip-hash&lt;/p&gt;

&lt;p&gt;相同来源的ip，会给到某个特定的后端服务。用以解决session在多个后端服务中不共享的问题。但是现在如果走算法的话可以解决这个问题。&lt;/p&gt;

&lt;p&gt;server weights&lt;/p&gt;

&lt;p&gt;权重，按照我们分配的权重分配。&lt;/p&gt;

&lt;h4 id=&quot;load-balancing3rd-party&quot;&gt;Load balancing(3rd party)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.005.jpeg&quot; alt=&quot;Load_balancing_3rd_party&quot; /&gt;&lt;/p&gt;

&lt;p&gt;fair&lt;/p&gt;

&lt;p&gt;按后端服务器的响应时间来分配请求，响应时间短的优先分配。&lt;/p&gt;

&lt;p&gt;url_hash&lt;/p&gt;

&lt;p&gt;按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。&lt;/p&gt;

&lt;h4 id=&quot;serving-static-content&quot;&gt;Serving Static Content&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.006.jpeg&quot; alt=&quot;Serving_Static_Content&quot; /&gt;&lt;/p&gt;

&lt;p&gt;稍微介绍下&lt;a href=&quot;https://github.com/FuryBrand/localized-kityminder&quot;&gt;localized-kityminder&lt;/a&gt;的部署架构。&lt;/p&gt;

&lt;h4 id=&quot;http-request&quot;&gt;Http Request&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.007.jpeg&quot; alt=&quot;Http_Request&quot; /&gt;&lt;/p&gt;

&lt;p&gt;稍微介绍下HTTP请求的流程。重点是多级缓存。对应了为啥我们配置了Host还要清理浏览器缓存等问题。&lt;/p&gt;

&lt;p&gt;ping&lt;/p&gt;

&lt;p&gt;ping无法判断tcp/ip配置的是否正确，但是可以看下本机的host配置的是否正确。&lt;/p&gt;

&lt;p&gt;telnet&lt;/p&gt;

&lt;p&gt;telnet可以判断指定端口是否可用。&lt;/p&gt;

&lt;p&gt;curl&lt;/p&gt;

&lt;p&gt;curl是通过命令行发送HTTP请求，是真正的走了HTTP协议的。&lt;/p&gt;

&lt;h4 id=&quot;share-an-issue-of-go-live&quot;&gt;share an issue of go-live&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2021/2021-03-09-nginx-config-file/Nginx-data_masking-Ver0.8.008.jpeg&quot; alt=&quot;share_an_issue_of_go-live&quot; /&gt;&lt;/p&gt;

&lt;p&gt;分享一个上线过程中的问题。UAT环境验证通过的版本，上到线上之后就不好用了。发现有些资源请求不到。原来公司在域名到服务器那一层用了负载均衡，导致新版本的资源文件请求到了IP1上。乱了。&lt;/p&gt;

&lt;h4 id=&quot;end&quot;&gt;End&lt;/h4&gt;

&lt;p&gt;我前面说的全部内容，在一些情况下可能都是假的。所以具体问题具体分析，逻辑才是无敌的。为逻辑干杯🍻&lt;/p&gt;

&lt;h2 id=&quot;相关资料&quot;&gt;相关资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nginx.com/resources/glossary/reverse-proxy-server/&quot;&gt;What Is a Reverse Proxy Server?(nginx.com)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nginx.org/en/&quot;&gt;nginx.org offical site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nginx.org/en/docs/&quot;&gt;nginx.org documentation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hg.nginx.org/nginx&quot;&gt;nginx.org change log&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://hg.nginx.org/nginx/archive/tip.zip&quot;&gt;nginx.org source code(zip)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://nginx.org/en/docs/http/request_processing.html&quot;&gt;How nginx processes a request(nginx.org)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2021年03月09日：初稿。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 09 Mar 2021 11:22:49 +0000</pubDate>
        <link>http://furybrand.gitee.io//2021/03/09/nginx-config-file/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2021/03/09/nginx-config-file/</guid>
        
        <category>技术相关</category>
        
        <category>Nginx</category>
        
        
      </item>
    
      <item>
        <title>财务计算器</title>
        <description>&lt;h1&gt;定投计算器&lt;/h1&gt;
&lt;p&gt;投资时长：&lt;input type=&quot;text&quot; id=&quot;DCA_Time&quot; /&gt;年&lt;/p&gt;
&lt;p&gt;预期年化收益率：&lt;input type=&quot;text&quot; id=&quot;DCA_incomeRate&quot; /&gt;%&lt;/p&gt;
&lt;p&gt;每月存入：&lt;input type=&quot;text&quot; id=&quot;DCA_pay&quot; /&gt;元&lt;/p&gt;
&lt;p&gt;&lt;input type=&quot;button&quot; value=&quot;计算&quot; onclick=&quot;DCA_calc(1)&quot; /&gt;
&lt;input type=&quot;button&quot; value=&quot;清空&quot; onclick=&quot;DCA_calc(2)&quot; /&gt;&lt;/p&gt;
&lt;p&gt;投资总收益：&lt;input type=&quot;text&quot; id=&quot;DCA_income&quot; /&gt;元&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
// 定投
function DCA_calc(x){
    if(x==1){
        var money = document.getElementById(&quot;DCA_pay&quot;).value; // 每月存入
        var per = document.getElementById(&quot;DCA_incomeRate&quot;).value; // 年化收益率
        var year = document.getElementById(&quot;DCA_Time&quot;).value; // 投资时长
        money = parseFloat(money);
        monthPer = Math.pow(1 + per / 100, 1 / 12) - 1;
        month = year * 12;
        // 投资总收益
        const DCA_income = money * (1 + monthPer) * (Math.pow(1 + monthPer, month) - 1) / monthPer
        document.getElementById(&quot;DCA_income&quot;).value = DCA_income.toFixed(2);
    }else if(x==2){
        document.getElementById(&quot;DCA_pay&quot;).value = &quot;&quot;;
        document.getElementById(&quot;DCA_incomeRate&quot;).value = &quot;&quot;;
        document.getElementById(&quot;DCA_Time&quot;).value = &quot;&quot;;
        document.getElementById(&quot;DCA_income&quot;).value = &quot;&quot;;
    }


}
&lt;/script&gt;

</description>
        <pubDate>Wed, 17 Feb 2021 08:37:25 +0000</pubDate>
        <link>http://furybrand.gitee.io//2021/02/17/finance-calculator/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2021/02/17/finance-calculator/</guid>
        
        <category>JS</category>
        
        <category>财务</category>
        
        
      </item>
    
      <item>
        <title>一种用于应对灵活变化的测试用例模版</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;经过了小半年的尝试，终于有了一个我相对满意的模版了～&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;测试用例模版到底应该用啥&quot;&gt;测试用例模版到底应该用啥？&lt;/h2&gt;

&lt;p&gt;标准化是体现专业性的捷径，之前推了Excel版用例的标准化。后来组织调整，来到了创新业务的条线，就一直在考虑是否要启用思维导图的方式来作为测试用例的载体。&lt;/p&gt;

&lt;p&gt;其实去年在公司的某个创新项目中就进行了一下探索，但是存在一些未解决的问题。现在拿出来说，一方面是为了配合敏捷开发模型中的快速迭代。另一方面我觉得我的模版达到了一个小里程碑。所以聊一下。&lt;/p&gt;

&lt;p&gt;目前整个业界对于测试用例的编写载体，基本有3种。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Excel&lt;/li&gt;
  &lt;li&gt;思维导图&lt;/li&gt;
  &lt;li&gt;TestLink、HP ALM等或开源，或收费的测试用例管理平台&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TestLink没有试用过，但是HP ALM可以理解为一个加强版的，云端的带有测试用例模板的Excel。从成本（使用、迁移）来说，Excel和思维导图的成本都较低。下面我将这两种形式稍微做下对比：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Excel
    &lt;ul&gt;
      &lt;li&gt;优势：
        &lt;ul&gt;
          &lt;li&gt;可以模板化，从而规范测试用例的编写，进而输出相对合规和高品质的测试用例。&lt;/li&gt;
          &lt;li&gt;可以归档，针对稳定的功能模块，可以相对方便的复用。&lt;/li&gt;
          &lt;li&gt;进度数据很好统计。&lt;/li&gt;
          &lt;li&gt;可以非常直观的展现流程性的内容。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;劣势：
        &lt;ul&gt;
          &lt;li&gt;编写耗时较长。&lt;/li&gt;
          &lt;li&gt;文字阅读量大，评审过程非常痛苦。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;思维导图
    &lt;ul&gt;
      &lt;li&gt;优势：
        &lt;ul&gt;
          &lt;li&gt;编写耗时较短。&lt;/li&gt;
          &lt;li&gt;验证点简单直观。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;劣势：
        &lt;ul&gt;
          &lt;li&gt;基本没法归档。&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;可能有朋友会说，思维导图还有“无法统计进度”、“很难模版化”这两个弊病呢。我在当前版本的测试用例模版中一定程度上解决了。&lt;/p&gt;

&lt;h2 id=&quot;一种用于应对灵活变化的测试用例模版ver10&quot;&gt;一种用于应对灵活变化的测试用例模版Ver1.0&lt;/h2&gt;

&lt;h4 id=&quot;归档与继承&quot;&gt;归档与继承&lt;/h4&gt;

&lt;p&gt;测试用例在指导测试执行以外，还可能有两个作用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;归档&lt;/code&gt;（已有业务逻辑的传承，可供新人学习使用）、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;继承&lt;/code&gt;（回归测试等测试执行时无需再新写用例）。&lt;/p&gt;

&lt;p&gt;其实从现在来看，随着敏捷开发替代了瀑布开发，传统的Full Test， Regression Test(Round X), Sanity Test等相对少了，用例继承的机会也变少了。所以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;继承&lt;/code&gt;变成了伪需求。&lt;/p&gt;

&lt;p&gt;而新员工对于老流程的熟悉，其实可以用业务流程总结的文档以及自动化测试用例脚本来熟悉。所以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;归档&lt;/code&gt;的诉求也解决了。&lt;/p&gt;

&lt;h4 id=&quot;载体&quot;&gt;载体&lt;/h4&gt;

&lt;p&gt;为了避免商业付费和数据安全，试过几款软件，最后选择了百度脑图的本地版DesktopNaotu，可以从&lt;a href=&quot;https://github.com/NaoTu/DesktopNaotu/releases&quot;&gt;github&lt;/a&gt;上下载。&lt;/p&gt;

&lt;h4 id=&quot;模版说明&quot;&gt;模版说明&lt;/h4&gt;

&lt;p&gt;测试用例模版如下：
&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-12-25-test-case-template/testCaseTemplate.png&quot; alt=&quot;测试用例模版&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://furybrand.gitee.io/assets/2020/2020-12-25-test-case-template/testCaseTemplate_Ver1.0.km&quot;&gt;点我下载软件的.km源文件&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;从上面的截图可以看出，测试用例主要分4个板块，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;需求梳理&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;测试准备&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;测试用例&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;定制化体测内容&lt;/code&gt;。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;需求梳理&lt;/code&gt;：主要包含以逻辑的角度拆解需求，以上线过程的角度拆解上线注意事项，以线上运营的角度拆解配置及需求点的合理性。暂时列出了这些，实际可以根据具体的条线或者项目组进行特别设计。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;测试准备&lt;/code&gt;：这部分是在梳理好需求之后，写用例的过程中会得到，在实际测试开始前，需要做哪些准备工作，比如业务主数据的维护，人员权限的配置等。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;测试用例&lt;/code&gt;：测试用例相对复杂，我在后面详细说。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;定制化体测内容&lt;/code&gt;：一般来讲，我们可能有一个提测模版。但是为了减少测试和研发的沟通成本，我将提测内容以定制化的方式体现。就是我们要测试什么，需要研发提供具体的哪些东西，甚至需要一些操作节点的日志关键字。这样做也可以帮助测试梳理逻辑。也能在一定程度上提高研发的提测质量。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;测试用例&lt;/code&gt;的话，考虑到可读性，单独抽出来，在这里说。分如下几点：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;流程&lt;/code&gt;：主要是体现业务流程的用例，会区分步骤，同时每一个步骤内部还会以Note的形式加入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;前提条件&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;步骤描述&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;预期结果&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;备注信息&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Failed原因&lt;/code&gt;等内容，完全是符合传统用例规范的。old fashion but effective&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;功能点&lt;/code&gt;：为分支流程的单点测试主要列关键点即可。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;回归&lt;/code&gt;：顾名思义，需要做回归的场景。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;异常&lt;/code&gt;：设计的一些异常场景。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;结果&lt;/code&gt;：每一个步骤或者功能点的结果是需要手动标记的，初始是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-n&lt;/code&gt;;通过的话是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p&lt;/code&gt;;被阻塞是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-b&lt;/code&gt;；有问题（bug）是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-f&lt;/code&gt;；本次不执行是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-NA&lt;/code&gt;；注意，千万要按照该标准执行，下面会有一个结果统计工具，是按照该标准统计的。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;工具进度计算器&quot;&gt;工具：进度计算器&lt;/h2&gt;

&lt;p&gt;在DesktopNaotu软件中，右键“测试用例”节点，选择“Export Node”，将节点复制后，粘贴至下面的文本框中，可以计算进度。&lt;/p&gt;

&lt;p&gt;请输入用例内容：&lt;/p&gt;
&lt;textarea rows=&quot;15&quot; cols=&quot;80&quot; id=&quot;testCase&quot;&gt;&lt;/textarea&gt;
&lt;p&gt;&lt;input type=&quot;button&quot; value=&quot;统计&quot; onclick=&quot;count()&quot; /&gt;
&lt;p&gt;-n（new）的数量：&lt;pan id=&quot;underline_n&quot;&gt;&lt;/pan&gt;&lt;/p&gt;
&lt;p&gt;-p（passed）的数量：&lt;pan id=&quot;underline_p&quot;&gt;&lt;/pan&gt;&lt;/p&gt;
&lt;p&gt;-b（blocked）的数量：&lt;pan id=&quot;underline_b&quot;&gt;&lt;/pan&gt;&lt;/p&gt;
&lt;p&gt;-f（failed）的数量：&lt;pan id=&quot;underline_f&quot;&gt;&lt;/pan&gt;&lt;/p&gt;
&lt;p&gt;-NA（not available）的数量：&lt;pan id=&quot;underline_na&quot;&gt;&lt;/pan&gt;&lt;/p&gt;
&lt;p&gt;总数量为&lt;b id=&quot;underline_all&quot;&gt;&lt;/b&gt;；
    通过(p+NA)的数量为&lt;b id=&quot;underline_all_p&quot;&gt;&lt;/b&gt;；
    通过率(通过/总数)为&lt;b id=&quot;underline_all_p_na_rate&quot;&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;
    阻塞率(阻塞/总数)为&lt;b id=&quot;underline_all_b_rate&quot;&gt;&lt;/b&gt;
    错误率(错误/总数)为&lt;b id=&quot;underline_all_f_rate&quot;&gt;&lt;/b&gt;
    未执行率(未执行/总数)为&lt;b id=&quot;underline_all_n_rate&quot;&gt;&lt;/b&gt;
&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
    function count() {
        var testCase = document.getElementById(&quot;testCase&quot;).value;
        var count_n = getCharCount(testCase, '-n');
        var count_f = getCharCount(testCase, '-f');
        var count_p = getCharCount(testCase, '-p');
        var count_b = getCharCount(testCase, '-b');
        var count_na = getCharCount(testCase, '-NA');
        document.getElementById(&quot;underline_n&quot;).innerHTML = count_n;
        document.getElementById(&quot;underline_f&quot;).innerHTML = count_f;
        document.getElementById(&quot;underline_p&quot;).innerHTML = count_p;
        document.getElementById(&quot;underline_b&quot;).innerHTML = count_b;
        document.getElementById(&quot;underline_na&quot;).innerHTML = count_na;
        var count_all = count_n + count_f + count_p + count_na + count_b;
        var count_all_p_na = count_p + count_na;
        document.getElementById(&quot;underline_all&quot;).innerHTML = count_all;
        document.getElementById(&quot;underline_all_p&quot;).innerHTML = count_all_p_na;
        document.getElementById(&quot;underline_all_p_na_rate&quot;).innerHTML = getPercentage(count_all_p_na, count_all) + '%';
        document.getElementById(&quot;underline_all_b_rate&quot;).innerHTML = getPercentage(count_b, count_all) + '%';
        document.getElementById(&quot;underline_all_f_rate&quot;).innerHTML = getPercentage(count_f, count_all) + '%';
        document.getElementById(&quot;underline_all_n_rate&quot;).innerHTML = getPercentage(count_n, count_all) + '%';
    }
    function getCharCount(str, char) {
        var regex = new RegExp(char, 'g'); // 使用g表示整个字符串都要匹配
        var result = str.match(regex);          //match方法可在字符串内检索指定的值，或找到一个或多个正则表达式的匹配。
        var count = !result ? 0 : result.length;
        return count;
    }
    function getPercentage(num, total) {
        // if\(num == 0 \|| total == 0){
            // return 0;
        // }
        if(num == 0){
            return 0;
        }
        if(total == 0){
            return 0;
        }
        return (Math.round(num / total * 10000) / 100.00);// 小数点后两位百分比
    }
&lt;/script&gt;
&lt;/p&gt;
</description>
        <pubDate>Fri, 25 Dec 2020 10:57:25 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/12/25/test-case-template/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/12/25/test-case-template/</guid>
        
        <category>JS</category>
        
        <category>杂文</category>
        
        
      </item>
    
      <item>
        <title>MacOS-一些使用小技巧</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;从我大Windows切换到MacOS之后，会有诸多不太习惯的地方，这里做一个记录&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;设备信息&quot;&gt;设备信息&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;型号：MacBook Pro (16-inch, 2019)&lt;/li&gt;
  &lt;li&gt;系统版本：macOS Catalina Version:10.15.7（19H2）&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;在finder中通过vscode打开文件夹&quot;&gt;在Finder中通过VSCode打开文件夹&lt;/h2&gt;

&lt;p&gt;其实就是Windows上的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;右键-&amp;gt;Open With Code&lt;/code&gt;功能。可以直接参考这个&lt;a href=&quot;https://www.cnblogs.com/yangisme/p/12297317.html&quot;&gt;文章&lt;/a&gt;，虽然看起来OS的版本有点老，但是整体没啥变化。我实在懒得切换系统语言了。。。。（作为一个会中英日三门语言的大叔，最近在习惯日文系统😜）&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Launchpad -&amp;gt; Automator -&amp;gt; 快速操作&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-11-02-make-mac-better/01.jpg&quot; alt=&quot;01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;按下图进行配置 -&amp;gt; cmd s -&amp;gt; 输入“Open_With_Code”&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-11-02-make-mac-better/02.jpg&quot; alt=&quot;02&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;f &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
	&lt;/span&gt;open &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Visual Studio Code&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;在Finder中右击文件夹就可以找到刚刚创建的快速操作了&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-11-02-make-mac-better/03.jpg&quot; alt=&quot;03&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;图片的格式及画质转换&quot;&gt;图片的格式及画质转换&lt;/h2&gt;

&lt;p&gt;稍微有点理解macOS对于媒体工作者的强大之处了。Windows上对于图片转换一直没有找到很合适的软件，但是macOS的原生功能就很强大了，可以选择格式，还可以选择质量，很强。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;打开图片 -&amp;gt; 文件 -&amp;gt; 导出&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-11-02-make-mac-better/04.jpg&quot; alt=&quot;04&quot; /&gt;
&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-11-02-make-mac-better/05.jpg&quot; alt=&quot;05&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;更改系统截图之后的默认保存位置&quot;&gt;更改系统截图之后的默认保存位置&lt;/h2&gt;

&lt;p&gt;系统自带截图功能的几个快捷键：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift cmd 3&lt;/code&gt;：全屏截图&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift cmd 4&lt;/code&gt;：局部截图&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift cmd 4 space&lt;/code&gt;：窗口截图&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shift cmd 6&lt;/code&gt;：Touch Bar截图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;默认的保存位置是桌面，可以通过在终端中执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;defaults write com.apple.screencapture location ~/use/work/picture&lt;/code&gt;命令，将默认的保存路径调整至指定的路径&lt;strong&gt;~/use/work/picture&lt;/strong&gt;。&lt;/p&gt;

&lt;h2 id=&quot;修改环境变量&quot;&gt;修改环境变量&lt;/h2&gt;

&lt;p&gt;网上查，说&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bash_profile&lt;/code&gt;是最高优的用户级别环境变量的配置文件，于是在里面配置了如下内容，以使&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bin/chromedriver&lt;/code&gt;可以直接使用：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.bin&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;但是一直不生效，后来才知道，原来我现在版本的macOS默认使用的终端是zshell，ta默认是加载&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.zprofile&lt;/code&gt;的。进去一看，发现已经有内容了。于是追加了一下，整体内容如下：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
&lt;span class=&quot;c&quot;&gt;# Setting PATH for Python 3.9&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# The original version is saved in .zprofile.pysave&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Library/Frameworks/Python.framework/Versions/3.9/bin:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.bin&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;PATH
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2020年11月02日：初稿。&lt;/li&gt;
  &lt;li&gt;2020年11月：追加截图保存位置。&lt;/li&gt;
  &lt;li&gt;2020年12月：追加修改环境变量。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 02 Nov 2020 18:10:00 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/11/02/make-mac-better/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/11/02/make-mac-better/</guid>
        
        <category>技术相关</category>
        
        <category>macOS</category>
        
        
      </item>
    
      <item>
        <title>MySQL-环境问题汇总</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;这里汇总我遇到的所有关于MySQL的一些环境问题。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;背景&quot;&gt;背景&lt;/h2&gt;

&lt;p&gt;之前在这篇文章中(&lt;a href=&quot;/2020/09/03/mysql-by-docker/&quot;&gt;记一次在测试环境云服务器上搭建运行在Docker中的MySQL&lt;/a&gt;)记录了在Docker环境中搭建MySQL的服务。现在各条线测试环境的MySQL都是在该环境中运行。所以会遇到一些“类运维”相关的问题，这里做个记录，算是学习笔记了。&lt;/p&gt;

&lt;h2 id=&quot;设置mysql不区分表名的大小写&quot;&gt;设置MySQL不区分表名的大小写&lt;/h2&gt;

&lt;p&gt;数据好不容易迁移完了，然后有一个应用起来之后，web页面提示数据库表不存在。一看，发现这个库的表名中有大写，然后把错误提示中的SQL语句放到客户端执行下，发现迁移前的数据库可以正常执行，迁移后的docker版的MySQL就提示表不存在。好吧，应该要配置docker版的MySQL不区分表名大小写。需要在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/mysql/mysql.conf.d/mysqld.cnf&lt;/code&gt;中添加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lower_case_table_names=1&lt;/code&gt;。处理过程如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;先将docker容器中的文件复制到宿主机。&lt;/li&gt;
  &lt;li&gt;然后添加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lower_case_table_names=1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;随后将文件复制到容器中。&lt;/li&gt;
  &lt;li&gt;最后重启容器（如果防火墙不关闭的话，容器会启动失败，如果防火墙开启的话，即使端口打开也会访问不到，这个问题的原因后面再研究）&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;命令行存档如下：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[root@Server-i-jwvdl9av3u steve]# docker cp 1a0495313ae1:/etc/mysql/mysql.conf.d/mysqld.cnf .
[root@Server-i-jwvdl9av3u steve]# vim mysqld.cnf
[root@Server-i-jwvdl9av3u steve]# cat mysqld.cnf
# Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License, version 2.0,
# as published by the Free Software Foundation.
#
# This program is also distributed with certain software (including
# but not limited to OpenSSL) that is licensed under separate terms,
# as designated in a particular file or component or in included license
# documentation.  The authors of MySQL hereby grant you an additional
# permission to link the program and your derivative works with the
# separately licensed software that they have included with MySQL.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License, version 2.0, for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA

#
# The MySQL  Server configuration file.
#
# For explanations see
# http://dev.mysql.com/doc/mysql/en/server-system-variables.html

[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
datadir         = /var/lib/mysql
#log-error      = /var/log/mysql/error.log
# By default we only accept connections from localhost
#bind-address   = 127.0.0.1
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0
lower_case_table_names=1
[root@Server-i-jwvdl9av3u steve]# docker cp mysqld.cnf 1a0495313ae1:/etc/mysql/mysql.conf.d/mysqld.cnf
[root@Server-i-jwvdl9av3u steve]# docker exec -it 1a0495313ae1 /bin/bash
root@1a0495313ae1:/# cat /etc/mysql/mysql.conf.d/mysqld.cnf
# Copyright (c) 2014, 2016, Oracle and/or its affiliates. All rights reserved.
# ---------------same with above---------------
# blah blah blah...
# ---------------same with above---------------
lower_case_table_names=1
[root@Server-i-jwvdl9av3u steve]# docker stop 1a0495313ae1
1a0495313ae1
[root@Server-i-jwvdl9av3u steve]# service firewalld start
Redirecting to /bin/systemctl start firewalld.service
[root@Server-i-jwvdl9av3u steve]# docker start 1a0495313ae1
1a0495313ae1
[root@Server-i-jwvdl9av3u steve]# service firewalld stop
Redirecting to /bin/systemctl stop firewalld.service
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如此费事的原因是MySQL的镜像中不包含vim等文本编辑功能。可以安装，也可以通过上面的docker cp命令。思路来自&lt;a href=&quot;https://stackoverflow.com/questions/30853247/how-do-i-edit-a-file-after-i-shell-to-a-docker-container&quot;&gt;stackoverflow&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;修改时区&quot;&gt;修改时区&lt;/h2&gt;

&lt;p&gt;MySQL的官方image，启动后是UTC，和中国差了8个小时。可以先通过图形化客户端通过如下指令排查。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sysdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SHOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARIABLES&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIKE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;%time_zone%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改时区有两种方式：修改MySQL的配置文件；或者直接通过终端命令修改。&lt;del&gt;貌似通过终端修改的话，重启也可以不丢失&lt;/del&gt;（通过docker重启后配置丢了）。另注&lt;strong&gt;修改完成后，服务端直接生效，但是客户端需要重启才能生效&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jwvdl9av3u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docker&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a0495313ae1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bash&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a0495313ae1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Welcome&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monitor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;Commands&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;93400&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MySQL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Community&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Copyright&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;its&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affiliates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rights&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reserved&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;registered&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trademark&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Oracle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Corporation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;its&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;affiliates&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Other&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;names&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;trademarks&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;their&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;respective&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;owners&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'help;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\c&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clear&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;statement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GLOBAL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time_zone&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'+8:00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FLUSH&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIVILEGES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Query&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;rows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;affected&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;方式二修改配置文件&quot;&gt;方式二：修改配置文件&lt;/h4&gt;

&lt;p&gt;参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置MySQL不区分表名的大小写&lt;/code&gt;板块中的内容，在&lt;strong&gt;/etc/mysql/mysql.conf.d/mysqld.cnf&lt;/strong&gt;文件最下方增加一行&lt;strong&gt;**default-time_zone = ‘+8:00’&lt;/strong&gt;**即可。&lt;/p&gt;

&lt;h2 id=&quot;mysql连接数过多&quot;&gt;MySQL连接数过多&lt;/h2&gt;

&lt;p&gt;测试环境的应用启动报错了，原因是连接数过多，于是我登录终端想去改下配置。可惜😅&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[root@Server-i-jwvdl9av3u ~]# docker exec -it fff8182066ff /bin/bash
root@fff8182066ff:/# mysql -u root -p
Enter password:
ERROR 1040 (HY000): Too many connections
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;一劳永逸的方式是直接改配置文件，参考&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置MySQL不区分表名的大小写&lt;/code&gt;板块中的内容，在&lt;strong&gt;/etc/mysql/mysql.conf.d/mysqld.cnf&lt;/strong&gt;文件最下方增加一行&lt;strong&gt;**max_connections=1000&lt;/strong&gt;**即可。&lt;/p&gt;

&lt;p&gt;重启后通过&lt;strong&gt;**show variables like ‘max_connections’;&lt;/strong&gt;&lt;strong&gt;来确认修改是否生效。很遗憾，我上述的方式在我的机器上没有生效，只能用临时方案，在任意连接的客户端上执行&lt;/strong&gt;&lt;strong&gt;set global max_connections = 1000;&lt;/strong&gt;**后面再研究下原因。&lt;/p&gt;

&lt;h2 id=&quot;mysql禁止foreign-host的连接&quot;&gt;MySQL禁止foreign host的连接&lt;/h2&gt;

&lt;p&gt;现象是程序无法连接到MySQL，但是我没有看到具体的错误信息。不过从MySQL Workbench上也表现出连接不上的现象。通过telnet可以看出，端口是通的。注：telnet只能看端口是否通，不能正确反应外部的客户端是否能连接。所以还是要用客户端进行可用性的判断。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;Steve@ZBMAC-C657521M ~ % telnet 11.51.193.15 22001
Trying 11.51.193.15...
Connected to 11.51.193.15.
Escape character is &lt;span class=&quot;s1&quot;&gt;'^]'&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
J
5.7.31+g&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;Dm% &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;:pi&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;sdd
mmysql_native_passwordConnection closed by foreign host.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;登录mysql的控制台，通过下面的路径将root的以密码&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;123456&lt;/code&gt;的登录授权给任意ip。若想将任意ip替换为指定ip，则将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%&lt;/code&gt;替换为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.0.1&lt;/code&gt;（指定ip）即可。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;mysql&amp;gt; grant all privileges on *.* to 'root'@'%' identified by '123456';
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql&amp;gt; flush privileges;
Query OK, 0 rows affected (0.00 sec)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;坑：我在配置的时候，不知为何密码只能用数字。别说英文符号了，连英文字母都不行，我也不知道为啥🤷‍♂️，后面再研究吧。&lt;/p&gt;

&lt;p&gt;密码只能设置数字的问题，可以尝试用这个来解决&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ALTER USER 'root'@'%' IDENTIFIED BY 'my-secret-pw-xixi';&lt;/code&gt;。具体原因后面一并研究。&lt;/p&gt;

&lt;h2 id=&quot;权限追加&quot;&gt;权限追加&lt;/h2&gt;

&lt;p&gt;通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GRANT SELECT,INSERT,UPDATE ON i_xixi.* TO 'admin'@'%';&lt;/code&gt;可以给admin用户赋予i_xixi库中所有表的查，插，更新的权限。&lt;/p&gt;

&lt;h2 id=&quot;通过终端连接远端的数据库&quot;&gt;通过终端连接远端的数据库&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql -h 主机名(url/ip) -u 用户名 -P 端口 -p密码&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2020年10月26日：初稿。&lt;/li&gt;
  &lt;li&gt;2020年10月：追加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL连接数过多&lt;/code&gt;；修改&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;修改时区&lt;/code&gt;；迁移&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;设置MySQL不区分表名的大小写&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;2020年11月：追加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL禁止foreign host的连接&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;2020年12月：追加&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;权限追加&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;鸣谢&quot;&gt;鸣谢&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.cnblogs.com/chenlove/p/9353437.html&quot;&gt;mysql时出现：is not allowed to connect to this MySQL serverConnection closed by foreign host问题的解决&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 26 Oct 2020 18:10:00 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/10/26/mysql-ops/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/10/26/mysql-ops/</guid>
        
        <category>技术相关</category>
        
        <category>MySQL</category>
        
        <category>Docker</category>
        
        
      </item>
    
      <item>
        <title>记从Windows办公迁移至MAC办公</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;由于一些特殊原因，告别了亲爱的Lenovo T490，开始用MacBook Pro（2019,10.15.7 (19H2)）了&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;适应新的机器&quot;&gt;适应新的机器&lt;/h2&gt;

&lt;p&gt;建议阅读&lt;a href=&quot;https://zhuanlan.zhihu.com/p/83863239?from_voters_page=true&quot;&gt;知乎上的这篇文章&lt;/a&gt;，首先对手上的新机器有所了解。作者的一个观点很好，用使用iPhone的角度去理解MAC，摒弃Windows的一些操作习惯。&lt;/p&gt;

&lt;p&gt;效率控可以再看下官网提供的这些东西:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/zh-cn/HT201236&quot;&gt;Mac 键盘快捷键&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/zh-cn/guide/safari/cpsh003/mac&quot;&gt;Mac 上 Safari 浏览器中的键盘快捷键和手势&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://support.apple.com/zh-cn/guide/mac-help/mh26782/mac&quot;&gt;在 Mac 上截屏或录制屏幕&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;一些常见的软件&quot;&gt;一些常见的软件&lt;/h2&gt;

&lt;p&gt;有些软件下载下来后没有通过Mac的安全检查，比如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQLWorkbench&lt;/code&gt;，此时需要如下路径进行允许&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;🍎 -&amp;gt; 系统偏好设置 -&amp;gt; 安全性与隐私&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;homebrew&quot;&gt;Homebrew&lt;/h4&gt;

&lt;p&gt;一款MacOS上的包管理工具。&lt;a href=&quot;https://brew.sh/&quot;&gt;官网&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装命令，在终端中执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;好多软件都可以通过这个来安装，如果觉得安装别的软件时速度很慢，可以考虑网上搜一下换个源。&lt;/p&gt;

&lt;p&gt;如果想要&lt;strong&gt;临时&lt;/strong&gt;取消&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ brew install XXX&lt;/code&gt;时默认触发的升级操作的话，可以执行该命令&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ export HOMEBREW_NO_AUTO_UPDATE=true&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;Steve@ZBMAC-C657521M local % brew list
aom			fribidi			guile			libev			libsoxr			libxcb			node			python@3.9		tcl-tk			xz
bdw-gc			gdbm			harfbuzz		libevent		libtasn1		libxdmcp		opencore-amr		rav1e			telnet			zeromq
c-ares			gettext			icu4c			libffi			libtiff			libxext			openjpeg		readline		tesseract		zimg
cairo			giflib			jemalloc		libidn2			libtool			libxrender		openssl@1.1		rtmpdump		theora
dav1d			git			jmeter			libogg			libunistring		little-cms2		opus			rubberband		unbound
ffmpeg			glib			jpeg			libpng			libvidstab		lzo			p11-kit			sdl2			webp
flac			gmp			lame			libpthread-stubs	libvorbis		mpdecimal		pcre			snappy			x264
fontconfig		gnutls			leptonica		libsamplerate		libvpx			mysql@5.7		pcre2			speex			x265
freetype		gobject-introspection	libass			libsndfile		libx11			nettle			pixman			sqlite			xorgproto
frei0r			graphite2		libbluray		libsodium		libxau			nghttp2			pkg-config		srt			xvid
another-redis-desktop-manager                                                                                                  picgo
Steve@ZBMAC-C657521M local % brew list jmeter
/usr/local/Cellar/jmeter/5.3/bin/jmeter
/usr/local/Cellar/jmeter/5.3/libexec/backups/ (20 files)
/usr/local/Cellar/jmeter/5.3/libexec/bin/ (184 files)
/usr/local/Cellar/jmeter/5.3/libexec/docs/ (2083 files)
/usr/local/Cellar/jmeter/5.3/libexec/extras/ (20 files)
/usr/local/Cellar/jmeter/5.3/libexec/lib/ (114 files)
/usr/local/Cellar/jmeter/5.3/libexec/licenses/ (143 files)
/usr/local/Cellar/jmeter/5.3/libexec/printable_docs/ (72 files)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew upgrade jmeter&lt;/code&gt;升级jmeter&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;git&quot;&gt;git&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://git-scm.com/download/mac&quot;&gt;官网&lt;/a&gt;已经给出了安装方式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ brew install git&lt;/code&gt;。&lt;/p&gt;

&lt;h4 id=&quot;visual-studio-code&quot;&gt;Visual Studio Code&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;python&quot;&gt;Python&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://www.python.org/ftp/python/3.9.0/python-3.9.0-macosx10.9.pkg&quot;&gt;官网&lt;/a&gt;下载安装包安装。&lt;/p&gt;

&lt;p&gt;安装pip，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ python3 -m pip install --upgrade pip setuptools wheel&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;mysqlworkbench&quot;&gt;MySQLWorkbench&lt;/h4&gt;

&lt;p&gt;MySQL的图形化客户端，虽然没那么好用，但是至少有啊😅&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;https://dev.mysql.com/downloads/workbench/&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;freemind&quot;&gt;FreeMind&lt;/h4&gt;

&lt;p&gt;免费开源的思维导图工具。20.11.03更新：FreeMind在macOS上的兼容性可以用非常糟糕来形容。于是找到了其替代品SciaReto。&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;http://freemind.sourceforge.net/wiki/index.php/Download&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;sciareto&quot;&gt;SciaReto&lt;/h4&gt;

&lt;p&gt;免费开源的思维导图工具。&lt;/p&gt;

&lt;p&gt;直接去github上取&lt;a href=&quot;https://github.com/raydac/netbeans-mmd-plugin/releases&quot;&gt;最新的release&lt;/a&gt;吧。&lt;/p&gt;

&lt;h4 id=&quot;desktopnaotu&quot;&gt;DesktopNaotu&lt;/h4&gt;

&lt;p&gt;基于百度FEX团队的开源产品&lt;a href=&quot;https://github.com/fex-team/kityminder-core&quot;&gt;KityMinder&lt;/a&gt;的本地离线运行的版本。&lt;/p&gt;

&lt;p&gt;直接去github上取&lt;a href=&quot;https://github.com/NaoTu/DesktopNaotu/releases&quot;&gt;最新的release&lt;/a&gt;吧。&lt;/p&gt;

&lt;h4 id=&quot;iterm&quot;&gt;iTerm&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://www.iterm2.com/&quot;&gt;官网&lt;/a&gt;下载安装包安装。&lt;/p&gt;

&lt;p&gt;如何保存密码？先在任意位置创建一个文件（我在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/&lt;/code&gt;中创建了一个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh_login&lt;/code&gt;文件）用以保存登陆脚本，并赋予权限（我直接&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chmod 777 ssh_login&lt;/code&gt;了😅）。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-10-24-software-4-work-MAC/Jietu20201024-163022.jpg&quot; alt=&quot;效果图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下面是脚本文本，复制即用～&lt;/p&gt;

&lt;div class=&quot;language-ssh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/expect&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; timeout &lt;span class=&quot;m&quot;&gt;30&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;spawn&lt;/span&gt; ssh -p [lindex &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;argv &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;] [lindex &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;argv &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;]@[lindex &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;argv &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
&lt;span class=&quot;k&quot;&gt;expect&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;&quot;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;yes&lt;/span&gt;/no)?&quot;
        &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;send&lt;/span&gt; &quot;yes&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;n&quot;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;exp_continue&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;password&lt;/span&gt;:&quot;
        &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;send&lt;/span&gt; &quot;[lindex &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;argv &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;]&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;n&quot;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;interact&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后在iTerm中进入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command O -&amp;gt; Edit Profiles -&amp;gt; +&lt;/code&gt;后按照下图配置即可。Send text at start中填写脚本路径及参数&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/ssh_login 22 root 10.170.220.34 2FGP%czQ@1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-10-24-software-4-work-MAC/Jietu20201024-165248.jpg&quot; alt=&quot;效果图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;一个小坑：如果在执行的过程中出现了类似&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zsh: event not found:_+&lt;/code&gt;的报错，那么可能是密码中包含了shell的关键字，比如我的是&lt;strong&gt;2FGP%c!_+&lt;/strong&gt;，此时需要使用escape character “\”，即将命令写为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.ssh/ssh_login 22 root 10.170.220.34 2FGP%c\!_+&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;docker&quot;&gt;docker&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://www.docker.com/get-started&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;fiddler&quot;&gt;Fiddler&lt;/h4&gt;

&lt;p&gt;没有经典版可以用，但是可以下载Fiddler Everywhere来用。访问&lt;a href=&quot;https://www.telerik.com/download/fiddler-everywhere&quot;&gt;官网&lt;/a&gt;输入邮箱，选好系统版本即可下载。&lt;/p&gt;

&lt;h4 id=&quot;postman&quot;&gt;Postman&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://www.postman.com/downloads/&quot;&gt;官网&lt;/a&gt;下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;ishot&quot;&gt;iShot&lt;/h4&gt;

&lt;p&gt;很好用的截图工具，可以直接通过快捷键&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;option a&lt;/code&gt;来唤醒，标记完成后直接进入剪贴板。虽然拿到Windows上是人人都有的功能，但是对比了系统自带的截图工具，和腾讯推出的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;截图&lt;/code&gt;软件，这款iShot让我感动到哭。&lt;/p&gt;

&lt;p&gt;从App Store中&lt;a href=&quot;https://apps.apple.com/cn/app/ishot-%E6%88%AA%E5%9B%BE-%E5%BD%95%E5%B1%8F-2020%E5%85%A8%E6%96%B0%E9%AB%98%E5%BA%A6/id1485844094?mt=12&quot;&gt;下载&lt;/a&gt;即可。&lt;/p&gt;

&lt;h4 id=&quot;switchhosts&quot;&gt;SwitchHosts!&lt;/h4&gt;

&lt;p&gt;直接&lt;a href=&quot;https://github.com/oldj/SwitchHosts/releases/tag/v3.5.4&quot;&gt;官网&lt;/a&gt;下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;网易mumu&quot;&gt;网易MuMu&lt;/h4&gt;

&lt;p&gt;MacOS上的软件太少了，逼着我用移动端的软件😭&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;http://mumu.163.com/baidu/&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;virtualbox&quot;&gt;VirtualBox&lt;/h4&gt;

&lt;p&gt;为了防止有些软件只能在windows上使用，搞个虚拟机预备着。镜像正在下载，后面看看如何再来更新。&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;官网&lt;/a&gt;选择MAC版本下载安装即可。Windows预览版的镜像&lt;a href=&quot;https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewserver?wa=wsignin1.0&quot;&gt;下载地址&lt;/a&gt;，发现一问题，貌似这东西需要有windows Insider计划的账号才行。。。。。。。&lt;/p&gt;

&lt;p&gt;20.10.26更新：没有预览版账号也不要紧，可以去大名鼎鼎的&lt;a href=&quot;https://msdn.itellyou.cn/&quot;&gt;msdnitellyou&lt;/a&gt;上下载。不过由于下载地址是ed2k的链接，所以我们还需要用到同样大名鼎鼎的&lt;a href=&quot;https://dl.xunlei.com/#mod02&quot;&gt;迅雷&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;下载好之后可以参考该&lt;a href=&quot;https://www.cnblogs.com/andong2015/p/7688120.html&quot;&gt;博文&lt;/a&gt;进行安装。如果想共享宿主机的文件夹，需要进入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;菜单栏 Devices -&amp;gt;Shared Folders -&amp;gt;Shared Folders Settings...&lt;/code&gt;并进行如设置。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-10-24-software-4-work-MAC/iShot2021-02-09.png&quot; alt=&quot;设置图&quot; /&gt;&lt;/p&gt;

&lt;p&gt;关闭Windows的自动更新：Windwos+R，输入“gpedit.msc”回车，在本地注册表编辑器中依次打开：计算机配置-管理模板-Windows组件-windows 更新，在右侧将“配置自动更新”和“允许自动更新立即安装”的状态改为“已禁用”，重启电脑，查看一下。参考&lt;a href=&quot;https://answers.microsoft.com/zh-hans/windows/forum/all/%E6%B0%B8%E4%B9%85%E5%85%B3%E9%97%ADwin10%E8%87%AA/29ebb211-8189-4c96-abab-31a851cc75a9&quot;&gt;永久关闭win10自动更新
&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;folx&quot;&gt;Folx&lt;/h4&gt;

&lt;p&gt;有免费版和付费的高级版，我这用的是免费版，其实目前就是挂着下windows的镜像。知乎上有人推荐就下来试试&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;https://mac.eltima.com/folx-download.html&quot;&gt;官网&lt;/a&gt;下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;flycut&quot;&gt;Flycut&lt;/h4&gt;

&lt;p&gt;试过好几款Ditto的替代品，这个算是免费软件中最好的了吧（虽然和Ditto差了好多😭）。&lt;/p&gt;

&lt;p&gt;直接&lt;a href=&quot;https://apps.apple.com/cn/app/flycut-clipboard-manager/id442160987?mt=12&quot;&gt;App Store&lt;/a&gt;中下载即可。&lt;/p&gt;

&lt;h4 id=&quot;jdk&quot;&gt;jdk&lt;/h4&gt;

&lt;p&gt;直接从&lt;a href=&quot;https://adoptopenjdk.net/index.html?variant=openjdk8&amp;amp;jvmVariant=hotspot&quot;&gt;AdoptOpenJDK&lt;/a&gt;上下载安装即可。&lt;/p&gt;

&lt;h4 id=&quot;telnet&quot;&gt;telnet&lt;/h4&gt;

&lt;p&gt;利用上面提到的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;来安装。命令为：&lt;strong&gt;brew install telnet&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;typora&quot;&gt;Typora&lt;/h4&gt;

&lt;p&gt;Typora专为markdown而生的文本编辑器，支持mermaid，用markdown来画图实在是太香了。[官网]（https://typora.io/）&lt;/p&gt;

&lt;h4 id=&quot;licecap&quot;&gt;LICEcap&lt;/h4&gt;

&lt;p&gt;LICEcap是轻量级的gif录制软件，功能上没有Windows平台上独占的ScreenToGif多，但是胜在跨平台。[官网]（https://www.cockos.com/licecap/）、[github主页]（https://github.com/justinfrankel/licecap）&lt;/p&gt;

&lt;h4 id=&quot;libreoffice&quot;&gt;LibreOffice&lt;/h4&gt;

&lt;p&gt;已经好几年没用过LibreOffice了，界面让我感到惊艳。[官网]（https://www.cockos.com/licecap/）&lt;/p&gt;

&lt;h4 id=&quot;the-unarchiver&quot;&gt;The Unarchiver&lt;/h4&gt;

&lt;p&gt;可以解压rar格式的免费软件。&lt;a href=&quot;https://apps.apple.com/us/app/the-unarchiver/id425424353?mt=12&quot;&gt;App Store&lt;/a&gt;上下载即可。&lt;/p&gt;

&lt;h4 id=&quot;jmeter&quot;&gt;JMeter&lt;/h4&gt;

&lt;p&gt;利用上面提到的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;来安装。命令为：&lt;strong&gt;brew install jmeter&lt;/strong&gt;。相关说明&lt;a href=&quot;https://formulae.brew.sh/formula/jmeter&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;响应结果的中文若显示为乱码（不是一坨横线）的，需要在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/Cellar/jmeter/5.0/libexec/bin&lt;/code&gt;中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jmeter.properties&lt;/code&gt;文件进行如下设置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sampleresult.default.encoding=UTF-8&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;如果中文显示为一坨横线，则是语言与外观不兼容导致。处理方式为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JMeter-&amp;gt;Options-&amp;gt;Look and Feel-&amp;gt;Metal&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;mysql&quot;&gt;MySQL&lt;/h4&gt;

&lt;p&gt;利用上面提到的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;来安装。5.7版本的安装命令为：&lt;strong&gt;brew install mysql@5.7&lt;/strong&gt;。下面记录下安装完成之后的相关信息。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Installing dependencies &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;mysql@5.7: openssl@1.1
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Installing mysql@5.7 dependency: openssl@1.1
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Pouring openssl@1.1-1.1.1i.catalina.bottle.tar.gz
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Caveats
A CA file has been bootstrapped using certificates from the system
keychain. To add additional certificates, place .pem files &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  /usr/local/etc/openssl@1.1/certs

and run
  /usr/local/opt/openssl@1.1/bin/c_rehash

openssl@1.1 is keg-only, which means it was not symlinked into /usr/local,
because macOS provides LibreSSL.

If you need to have openssl@1.1 first &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your PATH run:
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;/usr/local/opt/openssl@1.1/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc

For compilers to find openssl@1.1 you may need to &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;:
  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-L/usr/local/opt/openssl@1.1/lib&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPPFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-I/usr/local/opt/openssl@1.1/include&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Summary
🍺  /usr/local/Cellar/openssl@1.1/1.1.1i: 8,067 files, 18.5MB
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Installing mysql@5.7
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Pouring mysql@5.7-5.7.32.catalina.bottle.2.tar.gz
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; /usr/local/Cellar/mysql@5.7/5.7.32/bin/mysqld &lt;span class=&quot;nt&quot;&gt;--initialize-insecure&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--use&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Caveats
We&lt;span class=&quot;s1&quot;&gt;'ve installed your MySQL database without a root password. To secure it run:
    mysql_secure_installation

MySQL is configured to only allow connections from localhost by default

To connect run:
    mysql -uroot

mysql@5.7 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have mysql@5.7 first in your PATH run:
  echo '&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/opt/mysql@5.7/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' &amp;gt;&amp;gt; ~/.zshrc

For compilers to find mysql@5.7 you may need to set:
  export LDFLAGS=&quot;-L/usr/local/opt/mysql@5.7/lib&quot;
  export CPPFLAGS=&quot;-I/usr/local/opt/mysql@5.7/include&quot;


To have launchd start mysql@5.7 now and restart at login:
  brew services start mysql@5.7
Or, if you don'&lt;/span&gt;t want/need a background service you can just run:
  /usr/local/opt/mysql@5.7/bin/mysql.server start
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Summary
🍺  /usr/local/Cellar/mysql@5.7/5.7.32: 319 files, 234.4MB
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; Caveats
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; openssl@1.1
A CA file has been bootstrapped using certificates from the system
keychain. To add additional certificates, place .pem files &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
  /usr/local/etc/openssl@1.1/certs

and run
  /usr/local/opt/openssl@1.1/bin/c_rehash

openssl@1.1 is keg-only, which means it was not symlinked into /usr/local,
because macOS provides LibreSSL.

If you need to have openssl@1.1 first &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your PATH run:
  &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'export PATH=&quot;/usr/local/opt/openssl@1.1/bin:$PATH&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; ~/.zshrc

For compilers to find openssl@1.1 you may need to &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt;:
  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LDFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-L/usr/local/opt/openssl@1.1/lib&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;CPPFLAGS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-I/usr/local/opt/openssl@1.1/include&quot;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; mysql@5.7
We&lt;span class=&quot;s1&quot;&gt;'ve installed your MySQL database without a root password. To secure it run:
    mysql_secure_installation

MySQL is configured to only allow connections from localhost by default

To connect run:
    mysql -uroot

mysql@5.7 is keg-only, which means it was not symlinked into /usr/local,
because this is an alternate version of another formula.

If you need to have mysql@5.7 first in your PATH run:
  echo '&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/usr/local/opt/mysql@5.7/bin:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' &amp;gt;&amp;gt; ~/.zshrc

For compilers to find mysql@5.7 you may need to set:
  export LDFLAGS=&quot;-L/usr/local/opt/mysql@5.7/lib&quot;
  export CPPFLAGS=&quot;-I/usr/local/opt/mysql@5.7/include&quot;


To have launchd start mysql@5.7 now and restart at login:
  brew services start mysql@5.7
Or, if you don'&lt;/span&gt;t want/need a background service you can just run:
  /usr/local/opt/mysql@5.7/bin/mysql.server start
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;npm&quot;&gt;npm&lt;/h4&gt;

&lt;p&gt;利用上面提到的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;来安装。安装命令为：&lt;strong&gt;brew install npm&lt;/strong&gt;。&lt;/p&gt;

&lt;h4 id=&quot;drawio-desktop&quot;&gt;drawio-desktop&lt;/h4&gt;

&lt;p&gt;流程图的好手，但是貌似易用性较之Microsoft Viso还是差点意思，不过可以打开vsdx也算是挺牛了。drawio-desktop是diagrams.net的桌面版，直接去&lt;a href=&quot;https://github.com/jgraph/drawio-desktop/releases/&quot;&gt;github release地址&lt;/a&gt;下载吧。&lt;/p&gt;

&lt;h4 id=&quot;scroll-reverser&quot;&gt;Scroll-Reverser&lt;/h4&gt;

&lt;p&gt;Mac的触控板和的方向非常诡异（手往左上移动，图片也往左上移动😓我想让ta往又下移动啊），在设置里反转之后，鼠标的滚轮居然也反了，干～.～。通过Scroll-Reverser完美解决。&lt;a href=&quot;https://github.com/pilotmoon/Scroll-Reverser&quot;&gt;Github地址&lt;/a&gt;、&lt;a href=&quot;https://pilotmoon.com/scrollreverser/&quot;&gt;官网地址&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;keka&quot;&gt;keka&lt;/h4&gt;

&lt;p&gt;7-zip官网上推荐的工具，我就用过给压缩包增加密码这样的简单功能。&lt;a href=&quot;https://www.keka.io/en/&quot;&gt;官网&lt;/a&gt;。&lt;a href=&quot;https://d.keka.io/&quot;&gt;下载链接&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;视频下载&quot;&gt;视频下载&lt;/h4&gt;

&lt;p&gt;YouTube上的视频下载需要使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt;（&lt;a href=&quot;http://ytdl-org.github.io/youtube-dl/index.html&quot;&gt;官网&lt;/a&gt;&lt;a href=&quot;https://github.com/ytdl-org/youtube-dl&quot;&gt;GitHub工程地址&lt;/a&gt;）和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FFmpeg&lt;/code&gt;（&lt;a href=&quot;https://ffmpeg.org/&quot;&gt;官网&lt;/a&gt;）。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;youtube-dl&lt;/code&gt;是使用了官方手册指导进行安装（注意youtube-dl还依赖python）。&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FFmpeg&lt;/code&gt;是使用了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homebrew&lt;/code&gt;来安装。安装命令为：&lt;strong&gt;brew install ffmpeg&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;简单的使用手册：&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# 查看该视频的各种格式
liutianyu@ZMC Downloads % youtube-dl --list-formats https://www.youtube.com/watch\?v=zFQV0kw5saM
[youtube] zFQV0kw5saM: Downloading webpage
[info] Available formats for zFQV0kw5saM:
format code  extension  resolution note
249          webm       audio only tiny   52k , webm_dash container, opus @ 52k (48000Hz), 4.44MiB
250          webm       audio only tiny   69k , webm_dash container, opus @ 69k (48000Hz), 5.96MiB
140          m4a        audio only tiny  129k , m4a_dash container, mp4a.40.2@129k (44100Hz), 11.06MiB
251          webm       audio only tiny  137k , webm_dash container, opus @137k (48000Hz), 11.71MiB
160          mp4        256x144    144p   53k , mp4_dash container, avc1.4d400c@  53k, 30fps, video only, 4.58MiB
278          webm       256x144    144p   84k , webm_dash container, vp9@  84k, 30fps, video only, 7.23MiB
133          mp4        426x240    240p  120k , mp4_dash container, avc1.4d4015@ 120k, 30fps, video only, 10.31MiB
242          webm       426x240    240p  170k , webm_dash container, vp9@ 170k, 30fps, video only, 14.57MiB
134          mp4        640x360    360p  226k , mp4_dash container, avc1.4d401e@ 226k, 30fps, video only, 19.35MiB
243          webm       640x360    360p  365k , webm_dash container, vp9@ 365k, 30fps, video only, 31.23MiB
135          mp4        854x480    480p  351k , mp4_dash container, avc1.4d401f@ 351k, 30fps, video only, 30.07MiB
244          webm       854x480    480p  650k , webm_dash container, vp9@ 650k, 30fps, video only, 55.55MiB
136          mp4        1280x720   720p 1205k , mp4_dash container, avc1.4d401f@1205k, 30fps, video only, 103.00MiB
247          webm       1280x720   720p 1320k , webm_dash container, vp9@1320k, 30fps, video only, 112.80MiB
18           mp4        640x360    360p  650k , avc1.42001E, 30fps, mp4a.40.2 (44100Hz), 55.61MiB
22           mp4        1280x720   720p 1338k , avc1.64001F, 30fps, mp4a.40.2 (44100Hz) (best)
# 下载所有语言的字幕、并将视频进行合并
liutianyu@ZMC Downloads % youtube-dl --write-sub --all-subs --write-auto-sub -f 136+140 https://www.youtube.com/watch\?v=zFQV0kw5saM
[youtube] zFQV0kw5saM: Downloading webpage
[download] Destination: 【これで決まり！】新井恵理那のふるさとの味をご紹介！　恵理那とラピスの部屋#17-zFQV0kw5saM.f136.mp4
[download] 100% of 103.00MiB in 00:40
[download] Destination: 【これで決まり！】新井恵理那のふるさとの味をご紹介！　恵理那とラピスの部屋#17-zFQV0kw5saM.f140.m4a
[download] 100% of 11.06MiB in 00:04
[ffmpeg] Merging formats into &quot;【これで決まり！】新井恵理那のふるさとの味をご紹介！　恵理那とラピスの部屋#17-zFQV0kw5saM.mp4&quot;
Deleting original file 【これで決まり！】新井恵理那のふるさとの味をご紹介！　恵理那とラピスの部屋#17-zFQV0kw5saM.f136.mp4 (pass -k to keep)
Deleting original file 【これで決まり！】新井恵理那のふるさとの味をご紹介！　恵理那とラピスの部屋#17-zFQV0kw5saM.f140.m4a (pass -k to keep)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更多的使用方式&lt;a href=&quot;https://www.jianshu.com/p/6bae57859325&quot;&gt;【备份】youtube-dl使用介绍&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2020年10月24日：初稿。&lt;/li&gt;
  &lt;li&gt;2020年10月：追加windows镜像下载链接和flycut。&lt;/li&gt;
  &lt;li&gt;2020年11月：追加telnet、SciaReto、Typora、LICEcap、DesktopNaotu、LibreOffice。&lt;/li&gt;
  &lt;li&gt;2020年12月：追加The Unarchiver、JMeter、npm。&lt;/li&gt;
  &lt;li&gt;2021年1月：追加drawio-desktop、Scroll-Reverser。&lt;/li&gt;
  &lt;li&gt;2021年1月：追加视频下载。&lt;/li&gt;
  &lt;li&gt;2021年4月：追加keka。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 24 Oct 2020 15:52:00 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/10/24/software-4-work-MAC/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/10/24/software-4-work-MAC/</guid>
        
        <category>杂文</category>
        
        <category>macOS</category>
        
        <category>技术相关</category>
        
        
      </item>
    
      <item>
        <title>xin食:蜂蜜柚子茶</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;准备繁琐，步骤简单，容易苦😅不过倒是消耗蜂蜜的利器&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;用时&quot;&gt;用时&lt;/h2&gt;

&lt;p&gt;3小时以内&lt;/p&gt;

&lt;h2 id=&quot;食材&quot;&gt;食材&lt;/h2&gt;

&lt;p&gt;蜂蜜、柚子（应该不区分品种）、冰糖&lt;/p&gt;

&lt;h2 id=&quot;步骤&quot;&gt;步骤&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;柚子用盐水洗净（貌似可能有蜡）。&lt;/li&gt;
  &lt;li&gt;柚子皮剥下来后除去白色棉状部分（保留越少越好，不然容易苦）。&lt;/li&gt;
  &lt;li&gt;柚子皮切2-3cm的小条后泡在盐水中泡1小时。同时将柚子果肉剥出来备用。&lt;/li&gt;
  &lt;li&gt;柚子皮泡好后冷水下锅再煮10分钟，捞出后备用。&lt;/li&gt;
  &lt;li&gt;锅中加入水、冰糖、柚子果肉和果皮。中小火煮1小时左右至果肉软烂，果皮透亮。&lt;/li&gt;
  &lt;li&gt;晾凉后加入蜂蜜（基本1：1）。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://furybrand.gitee.io/assets/2020/2020-10-13-honey-pomelo-tea/pic.jpg&quot; alt=&quot;效果图&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tips&quot;&gt;Tips&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;基本没提量是吧，其实除了冰糖不要放太少以外（容易在Step5煮不成形）以外，别的都是凭感觉即可，因为反正最后是兑水喝。多点少点也有回旋的余地。&lt;/li&gt;
  &lt;li&gt;柚子皮一定要薄，白色部分最好不要，不然会很苦（我就搞得很苦，只能用可以败火来勉强安慰一下自己）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;参考资料&quot;&gt;参考资料&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.xiachufang.com/recipe/101680054/&quot;&gt;堂妈教你做蜂蜜柚子茶 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 12 Oct 2020 16:23:25 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/10/12/honey-pomelo-tea/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/10/12/honey-pomelo-tea/</guid>
        
        <category>xin食</category>
        
        
      </item>
    
      <item>
        <title>讨论如何覆盖异常</title>
        <description>&lt;h2 id=&quot;引子&quot;&gt;引子&lt;/h2&gt;

&lt;p&gt;业务测试团队的一项核心工作是保证软件产品可以支撑复杂的现实业务。然而很多时候留给测试的时间很少，能保证业务流程是通的就不错了，没有太多的时间去考虑各种各样的异常情况。但是实际上，很多线上事故都是由一些异常情况引起的。而线上问题的跟踪解决，后续方案的制定及实施等等依然会浪费大量的成本，同时用户的体验也得不到保障。所以如何覆盖异常逐渐变成了一个很值得关注的问题。&lt;/p&gt;

&lt;h2 id=&quot;异常的分类&quot;&gt;异常的分类&lt;/h2&gt;

&lt;p&gt;我个人给异常非常粗犷得划分为两类：&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;。其定义如下：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;：主要指的是一些异常的业务操作引起的异常或者为满足业务需求，新增的功能对原功能产生了意想不到的冲击。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;：主要指的是未能有效处理某种技术的天生缺陷所引起的异常。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下面分别讨论一下。&lt;/p&gt;

&lt;p&gt;软件服务于业务，是一种现实世界的投影。但是实际运行时，有可能不会像现实世界一样存在物理上的制约。比如业务上要先调用方法1，再调用方法2，影射了现实世界的“人”需要先拿起东西1放下东西1（方法1），再拿起东西2（方法2），这个场景下其实是从物理上做了制约。但是从技术实现上，方法1的入口可能是同步接口，而方法2的入口是一个消息队列。那么当用户执行方法1之后立马执行了方法2，便可能会出现方法2在方法1之前执行的情况，如果实际软件在运行中真的发生了这种情况，系统是否可以正确处理。这就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;异常业务操作引起的异常&lt;/code&gt;。再比如，我们要在现有软件的基础上做一个黑名单功能，对外提供了一个接口。那么将一名用户（或者什么别的）拉入黑名单之后，是不是要把ta的一些关联数据下掉。或者ta有什么未完成的业务的话，是否不可以将其拉入黑名单。同时该接口是一个批量操作的接口还是单个操作的接口，若是批量操作的，有没有可能一次调用量很大，导致接口超时？这些都是需要考虑的问题。而这就是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;新增功能对原功能产生了意想不到的冲击&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;没有一种技术是完美的，可以解决所有问题的。技术在解决问题中发展，但是一定会暴露出一些别的问题。比如分布式服务框架解决了负载的问题，可以满足618期间的大量调用。但是由于是跨服务间的调用，就涉及到了网络请求，从而引入“超时”这一状态，调用方和被调用方如果没有正确处理这个所谓的“第三态”便会发生&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;不过现实情况总是更加复杂，在复杂的软件系统下，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;总是如影随形，相伴出现。我这种划分方式也主要是给用例设计提供基本思考方向。&lt;/p&gt;

&lt;h2 id=&quot;职责的划分&quot;&gt;职责的划分&lt;/h2&gt;

&lt;p&gt;仁者见仁智者见智，职责划分也应该具体情况具体分析。我就基于下面的常见条件，给出一种“解法”吧。&lt;/p&gt;

&lt;p&gt;一般来讲，业务团队有三种角色：产、研、测。测试在其中属于既懂技术，又懂业务的一拨人。但是往往技术上赶不上研发同学，业务上不及产品同学😔（我们不考虑特殊情况哈，别较真）。针对上述情况，我考虑将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;主要交给测试同学来处理。而&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;主要由研发同学来解决，由测试同学来辅助检查。对此，研发同学应该进行“研发方案设计”。即先想好再做，同时在设计方案的时候需要对技术引起的异常有充分的考虑。同时，测试同学需要将异常放到“测试用例”的设计中。着重考虑&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;。至于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;可以做抽查，或者以Code Review（可以是自己进行Review，不一定是和架构一起的那场Review）的形式来解决。&lt;/p&gt;

&lt;h2 id=&quot;如何考虑业务引起的异常&quot;&gt;如何考虑&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;每个业务系统服务的业务不同，这里可以聊的东西不多，目前想到两点。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;从流程顺序不正常（颠倒调用顺序、缩短调用间隔等）的情况下系统如何处理着手。&lt;/li&gt;
  &lt;li&gt;业务上的“并发”（相同权限的人对于相同数据进行操作）。&lt;/li&gt;
  &lt;li&gt;面对新功能时，需要全面考虑新功能会造成哪些影响，系统需要如何处理。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;极致提升鲁棒性没问题，但是成本曲线会在鲁棒性达到一定程度时直线上升。所以也不用特别纠结，掌握度。有时候让外部系统来辅助保证业务调用顺序也不是不能接受嘛~~&lt;/p&gt;

&lt;h2 id=&quot;如何考虑技术引起的异常&quot;&gt;如何考虑&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;技术引起的异常&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;这里可以聊的就太多了，完全可以做成一个checklist。目前想到的也不是很多，这个后面再持续完善吧😅。&lt;/p&gt;

&lt;h4 id=&quot;同步接口&quot;&gt;同步接口&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;调用超时情况下的处理。&lt;/li&gt;
  &lt;li&gt;被重复调用时的处理。&lt;/li&gt;
  &lt;li&gt;被调用时必填字段校验及对应的错误提示。&lt;/li&gt;
  &lt;li&gt;被调用时报文的异常拼装（明细级别的重复、非法字段的传输等）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;消息队列&quot;&gt;消息队列&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;消费时遇到了相同的消息体。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;数据库&quot;&gt;数据库&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;数据是否会被同时操作。（有时后面动作的执行依赖前面数据的处理，但是考虑性能问题，一般咱的mysql都是锁写不锁读，这时候可能会发生前面的数据没处理完，后面的动作已经开始执行了，那读到的数据一定是错误的。这时候就需要考虑如何在流程上做限制，是否要引入Workflow Engine之类的了）。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;压测&quot;&gt;压测&lt;/h2&gt;

&lt;p&gt;按道理，压测应该归结于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;业务引起的异常&lt;/code&gt;，因为压测是为了看系统能承受多少的调用量。但是实际调用量的多少是和业务有关的。传统的压测往往是单一接口的压测。但是业务一旦跑起来之后，某些特殊的接口压力会突增，并且当某些机器被打崩之后，会产生连锁反应。故，业务上需要依照历史数据等方式进行正确的评估，而压测本身也应该从业务着眼。不知道别处如何，我们这边压测往往是专门团队来做，但是这样做的一个弊端是压测的人并不懂业务。所以后面应该要重新考虑“压测”该如何进行，是不是应该由业务团队来承接压测任务，这样的话或许传统的测试组织架构模式需要进行一轮更新也说不定。只不过我目前不是压测专家，后面进行实践后再来更吧。&lt;/p&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2020年10月9日：初稿。&lt;/li&gt;
  &lt;li&gt;2020年10月27日：增加业务“并发”。&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 09 Oct 2020 12:13:25 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/10/09/exception-checkpoints/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/10/09/exception-checkpoints/</guid>
        
        <category>技术相关</category>
        
        <category>测试方法</category>
        
        <category>杂文</category>
        
        
      </item>
    
      <item>
        <title>Linux-yum与apt(我要用啥去管理软件？)</title>
        <description>&lt;h2 id=&quot;引子&quot;&gt;引子&lt;/h2&gt;

&lt;p&gt;工作中常用的是CentOS，最近在鼓捣嵌入式设备（主要是PC机一直开机太费电了😅）。接触了一些别的发行版，总是搞不清该用啥去管理软件，这次彻底解决他。&lt;/p&gt;

&lt;h2 id=&quot;正文&quot;&gt;正文&lt;/h2&gt;

&lt;p&gt;Linux主要有两派发行版，RedHat系和Debian系。底层包管理软件用于直接管理软件安装包的操作，如安装、卸载等；上层包管理软件用于远程获取，管理软件包之间的复杂依赖关系等。&lt;/p&gt;

&lt;h4 id=&quot;redhat系&quot;&gt;RedHat系&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;底层包管理软件：RPM&lt;/li&gt;
  &lt;li&gt;上层包管理软件：YUM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;常见Distributions：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Red Hat&lt;/li&gt;
  &lt;li&gt;CentOS&lt;/li&gt;
  &lt;li&gt;SuSE&lt;/li&gt;
  &lt;li&gt;Fedora&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;debian系&quot;&gt;Debian系&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;底层包管理软件：dpkg&lt;/li&gt;
  &lt;li&gt;上层包管理软件：APT&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;常见Distributions：&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Debian&lt;/li&gt;
  &lt;li&gt;Ubuntu&lt;/li&gt;
  &lt;li&gt;B2D&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;碎碎念&quot;&gt;碎碎念&lt;/h2&gt;

&lt;p&gt;我是中午边吃饭边重读了《鸟哥的Linux私房菜-基础学习篇（第三版）》第一章的部分内容。刚刚网上一查，发现还是鸟哥写的更全更好，详细参考&lt;a href=&quot;https://linux.vbird.org/linux_basic/centos7/0110whatislinux.php#torvalds_dist&quot;&gt;鸟站&lt;/a&gt;。最好把第一章全读一下，可以有更深的了解。&lt;/p&gt;

&lt;h2 id=&quot;更新日志&quot;&gt;更新日志&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2020年10月9日：初稿&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 09 Oct 2020 04:32:25 +0000</pubDate>
        <link>http://furybrand.gitee.io//2020/10/09/yum-apt/</link>
        <guid isPermaLink="true">http://furybrand.gitee.io//2020/10/09/yum-apt/</guid>
        
        <category>技术相关</category>
        
        <category>Linux</category>
        
        
      </item>
    
  </channel>
</rss>
